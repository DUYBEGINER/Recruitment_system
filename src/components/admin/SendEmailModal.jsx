import React, { useState } from "react";
import { Modal, Form, Input, message } from "antd";
import { Mail, Send } from "lucide-react";
import emailAPI from "../../api/emailAPI";

const { TextArea } = Input;

/**
 * Modal g·ª≠i email cho ·ª©ng vi√™n
 */
export default function SendEmailModal({ visible, onClose, candidateEmail, candidateName }) {
  const [form] = Form.useForm();
  const [loading, setLoading] = useState(false);

  const handleSubmit = async (values) => {
    setLoading(true);
    try {
      const emailData = {
        to: candidateEmail,
        subject: values.subject,
        message: values.message,
        candidateName: candidateName
      };

      const result = await emailAPI.sendEmail(emailData);
      
      if (result.success) {
        message.success('G·ª≠i email th√†nh c√¥ng!');
        
        // N·∫øu l√† test email (Ethereal), hi·ªÉn th·ªã preview URL
        if (result.data?.previewURL) {
          Modal.info({
            title: 'Email ƒë√£ ƒë∆∞·ª£c g·ª≠i (Test Mode)',
            content: (
              <div>
                <p>Email ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng trong ch·∫ø ƒë·ªô test.</p>
                <p>B·∫°n c√≥ th·ªÉ xem email t·∫°i:</p>
                <a 
                  href={result.data.previewURL} 
                  target="_blank" 
                  rel="noopener noreferrer"
                  className="text-blue-600 hover:text-blue-700"
                >
                  {result.data.previewURL}
                </a>
                <p className="mt-2 text-sm text-slate-600">
                  <strong>L∆∞u √Ω:</strong> ƒê·ªÉ g·ª≠i email th·∫≠t, vui l√≤ng c·∫•u h√¨nh EMAIL_USER v√† EMAIL_PASSWORD trong file .env
                </p>
              </div>
            ),
            width: 600
          });
        }
        
        form.resetFields();
        onClose();
      } else {
        message.error(result.message || 'Kh√¥ng th·ªÉ g·ª≠i email');
      }
    } catch (error) {
      console.error('Error sending email:', error);
      message.error(error.response?.data?.message || 'L·ªói khi g·ª≠i email');
    } finally {
      setLoading(false);
    }
  };

  const handleCancel = () => {
    form.resetFields();
    onClose();
  };

  return (
    <Modal
      title={
        <div className="flex items-center gap-2">
          <Mail size={20} className="text-blue-600" />
          <span>G·ª≠i email cho ·ª©ng vi√™n</span>
        </div>
      }
      open={visible}
      onCancel={handleCancel}
      footer={null}
      width={700}
    >
      <div className="mb-4 p-3 bg-blue-50 rounded-lg border border-blue-200">
        <div className="flex items-start gap-2">
          <Mail size={16} className="text-blue-600 mt-0.5" />
          <div>
            <p className="text-sm text-slate-600">Ng∆∞·ªùi nh·∫≠n:</p>
            <p className="font-semibold text-slate-900">{candidateName}</p>
            <p className="text-sm text-blue-600">{candidateEmail}</p>
          </div>
        </div>
      </div>

      <Form
        form={form}
        layout="vertical"
        onFinish={handleSubmit}
        initialValues={{
          subject: `[PDD Tuy·ªÉn D·ª•ng] Th√¥ng b√°o t·ª´ ${candidateName || '·ª©ng vi√™n'}`
        }}
      >
        <Form.Item
          label="Ti√™u ƒë·ªÅ email"
          name="subject"
          rules={[
            { required: true, message: 'Vui l√≤ng nh·∫≠p ti√™u ƒë·ªÅ email' },
            { min: 5, message: 'Ti√™u ƒë·ªÅ ph·∫£i c√≥ √≠t nh·∫•t 5 k√Ω t·ª±' }
          ]}
        >
          <Input
            placeholder="VD: Th√¥ng b√°o v·ªÅ k·∫øt qu·∫£ ·ª©ng tuy·ªÉn"
            size="large"
          />
        </Form.Item>

        <Form.Item
          label="N·ªôi dung email"
          name="message"
          rules={[
            { required: true, message: 'Vui l√≤ng nh·∫≠p n·ªôi dung email' },
            { min: 20, message: 'N·ªôi dung ph·∫£i c√≥ √≠t nh·∫•t 20 k√Ω t·ª±' }
          ]}
        >
          <TextArea
            rows={10}
            placeholder={`Xin ch√†o ${candidateName || 'b·∫°n'},\n\nCh√∫ng t√¥i xin th√¥ng b√°o...\n\nTr√¢n tr·ªçng,\nPh√≤ng Nh√¢n s·ª±`}
            showCount
            maxLength={2000}
          />
        </Form.Item>

        <div className="p-3 bg-amber-50 rounded-lg border border-amber-200 mb-4">
          <p className="text-sm text-amber-800">
            <strong>üí° M·∫πo:</strong> Email s·∫Ω ƒë∆∞·ª£c g·ª≠i v·ªõi ƒë·ªãnh d·∫°ng chuy√™n nghi·ªáp, 
            bao g·ªìm logo c√¥ng ty v√† th√¥ng tin li√™n h·ªá.
          </p>
        </div>

        <div className="flex gap-3 justify-end">
          <button
            type="button"
            onClick={handleCancel}
            disabled={loading}
            className="px-4 py-2 rounded-lg border border-slate-300 text-slate-700 hover:bg-slate-50 disabled:opacity-50"
          >
            H·ªßy
          </button>
          <button
            type="submit"
            disabled={loading}
            className="px-4 py-2 rounded-lg bg-blue-600 text-white hover:bg-blue-700 disabled:opacity-50 flex items-center gap-2"
          >
            {loading ? (
              <>
                <span className="animate-spin">‚è≥</span>
                ƒêang g·ª≠i...
              </>
            ) : (
              <>
                <Send size={16} />
                G·ª≠i email
              </>
            )}
          </button>
        </div>
      </Form>
    </Modal>
  );
}
